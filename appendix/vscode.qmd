---
title: Visual Studio Code
execute:
  keep-ipynb: true
jupyter:
  jupytext:
    formats: 'ipynb,qmd'
    text_representation:
      extension: .qmd
      format_name: quarto
      format_version: '1.0'
      jupytext_version: 1.14.5
  kernelspec:
    display_name: Python 3 (ipykernel)
    language: python
    name: python3
---

[Visual Studio Code (VS Code)](https://code.visualstudio.com/) は、Microsoft社が開発したオープンソースのテキストエディタです。マルチプラットフォームで動作するため、Windows, Mac, Linux などのOSで利用できます。様々なプログラミング言語の開発、編集に対応し、拡張機能をインストールすることで、様々な機能を追加することができます。また、Jupyter Notebookで利用される`ipynb`ファイルを開いてプログラムの実行や編集ができるためにJupyter Notebookの代替としても利用できます。ここでは、VSCodeのインストール方法と基本的な使い方について説明します。

## インストール

VS Codeのインストールは、[公式サイト](https://code.visualstudio.com/)からダウンロードしてインストールします。インストール方法はOSによって異なります。ここでは、Windowsの場合のインストール方法を説明します。

1. [公式サイト](https://code.visualstudio.com/)にアクセスして、`Download for Windows`をクリックします。
1. ダウンロードしたインストーラを実行します。
1. インストールが完了したら、`Launch`をクリックしてVS Codeを起動します。

## 基本的な使い方

VS Codeの基本的な使い方について説明します。VS Codeは次のような画面になっています。

![VS Codeの画面](../img/vscode.png)

VS Codeの画面は、以下のように分割されています。

- タイトルバー
- メニューバー
- アクティビティバー
- サイドバー
- エディター
- ステータスバー

これらの部分について説明します。いずれの部分も、表示・非表示を切り替えることができます。表示・非表示を切り替えるには、`表示`メニューから、表示・非表示を切り替えたい部分を選択します。また、レイアウトも自分の好みに合わせて変更することができます。

### タイトルバー

タイトルバーには、VS Codeのバージョンや拡張機能の更新情報などが表示されます。また、タイトルバーの右側には、最大化、最小化、閉じるボタンがあります。

### メニューバー

メニューバーには、ファイル、編集、表示、移動、実行、ターミナル、ヘルプなどのメニューがあります。メニューをクリックすると、そのメニューに属するコマンドが表示されます。例えば新規ファイルを作成したい場合は、`ファイル`メニューの`新規ファイル`をクリックします。

VS Codeでは、メニューの代わりにコマンドパレットを利用することもできます。コマンドパレットは、`表示`メニューの`コマンドパレット`をクリックすることで表示されます。コマンドパレットには、ファイルの作成や拡張機能のインストール、設定の変更などの豊富なコマンドがあります。コマンドパレットを利用すると、メニューを開くことなくコマンドを実行することが可能となります。

VS Code上でターミナルを利用することも可能です。これにより、VS Code上でコマンドを実行したり、Pythonの対話型インタプリタを起動したりすることができます。ターミナルを利用するには、`表示`メニューの`ターミナル`をクリックします。新しいターミナルはエディター部分の下に表示されます。

### アクティビティバー

アクティビティバーには、`エクスプローラー`、`検索`、`Git`、`拡張機能`などのアイコンがあります。アクティビティバーのアイコンをクリックすると、その機能がサイドバーに表示されます。

### サイドバー

サイドバーはアクティビティバーで選択した機能に応じて表示される領域です。`エクスプローラー`を選択した場合は、ファイルやフォルダの構造を表示します。サイドバーにはプライマリサイドバーとセカンダリサイドバーの2種類があり、デフォルトではセカンダリサイドバーは非表示です。なおサイドバーの幅は、エディタ部分との境界をマウスでドラッグすることで調整可能です。

### エディター

エディターは、ファイルの内容を表示する領域です。複数のファイルをタブによって個別に表示できます。また、エディターの分割も可能です。エディターの分割は、`表示`メニューの`エディターの分割`から行うことができます。

### ステータスバー

画面下部のステータスバーには各種の情報が表示されます。編集中のファイルの文字コードや改行コード、行数、列数の他、拡張機能による追加情報が表示されます。

## 拡張機能

VS Codeはユーザーが必要に応じて拡張機能を追加することで、その使い勝手や機能を拡張できるようになっています。拡張機能は、アクティビティーバーの`拡張機能`アイコンをクリックすると表示される画面から、任意のものを選んでインストールできます。拡張機能パネルは、`表示`メニューの`拡張機能`を選択することでも表示することができます。

拡張機能の種類は非常に多く、プログラミング言語のサポートやプロジェクト管理のためのものや、VS Codeのテーマを変更するものなどがあります。拡張機能は、`インストール`タブからインストールすることができます。インストールした拡張機能は、`インストール済み`タブから確認することができます。また、`有効`タブから拡張機能を有効化・無効化することができます。

::: {.callout-tip title="おすすめの拡張機能"}

データサイエンス、機械学習、プログラミング全般に役立つ、おすすめの拡張機能を紹介します。

- Japanese Language Pack for Visual Studio Code
- Jupyter
- Python
- R
- Quarto
- Docker
- GitHub Copilot

:::

## ワークスペース

VS Codeでは、ワークスペースという概念を利用します。ワークスペースとは、フォルダやファイルの集合を指します。ワークスペースを作成することで、複数のフォルダやファイルを一つのプロジェクトとして管理することができます。ワークスペースは、`ファイル`メニューの`ワークスペースを開く`から開くことができます。また、`ファイル`メニューの`ワークスペースを保存`からワークスペースを保存することができます。

## 設定

ユーザー設定とワークスペース設定の2種類

## キーボードショートカット

豊富なキーボードショートカット。jsonファイルでカスタマイズ可能。

## VS Codeを利用したJupyter実行環境の構築

Windows向け。

- [理系大学生は研究でもJupyterNotebook(Anaconda)ではなくVScodeを使おう+Python環境構築](https://qiita.com/KMNMKT/items/499c657ff3fa1c0f68e6)
- [理系大学生のためのPython環境のススメ](https://qiita.com/KMNMKT/items/636e7ba1fbd383bc1413)