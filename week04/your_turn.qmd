---
title: "ペンギンデータの分類に挑戦"
jupyter: python3
execute: 
  echo: false
---

$\underline{学籍番号：\hspace{8em}}$, $\underline{氏名：\hspace{8em}}$

学習データの特徴からテストデータの種名を予測しましょう。

```{python}
import matplotlib.pyplot as plt
import numpy as np
import pandas as pd
import seaborn as sns
from sklearn.model_selection import train_test_split
```

```{python}
pd.set_option("display.max_rows", None)
pd.set_option("display.max_columns", None)
```


```{python}
penguins = sns.load_dataset("penguins")
penguins.dropna(inplace=True)

# ここのseed指定忘れ...
penguins_small = penguins.groupby("species").apply(lambda x: x.sample(frac=0.3))
penguins_small.reset_index(drop=True, inplace=True)

X = penguins_small.drop(columns="species")
y = penguins_small["species"]
```

## 学習データ

```{python}
X_train, X_test, y_train, y_test = train_test_split(
  X, y, test_size=0.2, random_state=20230508
  )
train_out = pd.concat([X_train, y_train], axis=1).sort_index()
train_out = train_out[penguins.columns]
```

```{python}
train_out.to_csv("train.csv", index=False)
```

```{python}
#| eval: false
pd.read_csv("train.csv")
```

### 要約統計量

```{python}
train_grp = train_out.groupby("species")
train_grp[["bill_length_mm", "bill_depth_mm", "flipper_length_mm", "body_mass_g"]].agg(["mean", "std"]).transpose()
```

### 散布図

```{python}
#| fig-cap: 学習データのプロット
plt.figure(figsize=(5, 4))
sns.scatterplot(
    data=train_out,
    x="bill_length_mm",
    y="bill_depth_mm",
    # 塗り分けの変数の指定
    hue="species",
    style="species"
)
plt.show()
```

\newpage

## テストデータ

学習データ、テストデータの特徴をもとに、テストデータに対して種名の分類を行ってみましょう。

以下の表のspecies列に`Adelie`（アデリーペンギン）だと思えば`A`、`Chinstrap`（ヒゲペンギン）であれば`C`、`Gentoo`（ジェンツーペンギン）であれば`G`を記載します。

```{python}
correct_df = pd.concat([X_test, y_test], axis=1)
test_out = correct_df[penguins.drop(columns=["species"]).columns]
```

```{python}
test_out.to_csv("test.csv", index=False)
```

```{python}
# df = test_out
df = pd.read_csv("test.csv")
df["species"] = ""

df[['species', 'bill_length_mm', 'bill_depth_mm', 'flipper_length_mm', 'body_mass_g']]
```

$\underline{不正解の件数：\hspace{3em}}$

```{python}
#| eval: false
correct_df[penguins.columns]
```
